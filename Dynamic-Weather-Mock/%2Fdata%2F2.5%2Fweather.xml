<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction xmlns:con="http://eviware.com/soapui/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="/data/2.5/weather" method="GET" resourcePath="/data/2.5/weather" id="7bab8663-655f-49f2-ac80-33ffa0c6e2ac">
  <con:settings id="03cb3b49-9c1b-4680-8593-fffbfa1fd377">
    <con:setting id="7bab8663-655f-49f2-ac80-33ffa0c6e2acfileName">%2Fdata%2F2.5%2Fweather</con:setting>
  </con:settings>
  <con:defaultResponse>Dynamic Response</con:defaultResponse>
  <con:dispatchStyle>PARAMETER</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer>
    <con:ParameterDispatcherRule>
      <con:ruleName>q=Somerville&amp;appid=85c705dd76051cb3d8e5540b300279d4</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>q</con:parameterName>
        <con:parameterValue>Somerville</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>appid</con:parameterName>
        <con:parameterValue>85c705dd76051cb3d8e5540b300279d4</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Somerville</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>q=Cambridge&amp;appid=85c705dd76051cb3d8e5540b300279d4</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>q</con:parameterName>
        <con:parameterValue>Cambridge</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>appid</con:parameterName>
        <con:parameterValue>85c705dd76051cb3d8e5540b300279d4</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Cambridge</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>q=Boston&amp;appid=85c705dd76051cb3d8e5540b300279d4</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>q</con:parameterName>
        <con:parameterValue>Boston</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>appid</con:parameterName>
        <con:parameterValue>85c705dd76051cb3d8e5540b300279d4</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>Boston</con:responseName>
    </con:ParameterDispatcherRule>
    <con:ParameterDispatcherRule>
      <con:ruleName>q=Austin&amp;appid=85c705dd76051cb3d8e5540b300279d4</con:ruleName>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>q</con:parameterName>
        <con:parameterValue>Austin</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:parameterDispatcherCondition>
        <con:parameterType>QUERY</con:parameterType>
        <con:parameterOperationType>EQUALS</con:parameterOperationType>
        <con:parameterName>appid</con:parameterName>
        <con:parameterValue>85c705dd76051cb3d8e5540b300279d4</con:parameterValue>
      </con:parameterDispatcherCondition>
      <con:responseName>For q=Austin&amp;appid=85c705dd76051cb3d8e5540b300279d4</con:responseName>
    </con:ParameterDispatcherRule>
  </con:parameterDispatcherRuleContainer>
  <con:routeEnabled>false</con:routeEnabled>
  <con:conditionalRoutingEnabled>true</con:conditionalRoutingEnabled>
  <con:routeScript/>
  <con:saveRoutedResponse>false</con:saveRoutedResponse>
  <con:response name="Dynamic Response" id="e1a78fcd-331a-4996-9ca3-f5578057ca4c" httpResponseStatus="200" mediaType="application/json" encoding="utf-8" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570" dataSource="Data Source 1">
    <con:settings/>
    <con:script>//Read in excel libraries
import org.apache.poi.ss.usermodel.*
import org.apache.poi.xssf.usermodel.XSSFWorkbook

//================================================================//
//Part 1. Read in request parameters. 
//================================================================//

// Get the query string of the request, isolate the "q" parameter
// In this example, the request string looks like: "q=CityName&amp;apikey=abc1234"
def inputString = mockRequest.getRequest().getQueryString()
def inputString2 = mockRequest.getRequest()
log.info inputString2
def q = null
//split query string
def keyValuePairs = inputString.split("&amp;")
keyValuePairs.each { pair ->
    def key = pair.split("=")[0]
    def value = pair.split("=")[1]
    if (key == "q") {
        q = value
    }
}

//================================================================//
//Part 2. Open Workbook. Scan for row of data 
//================================================================//

// Specify the path to your Excel file
def filePath = "C:/Users/sarah.souza/Documents/ReadyAPI Project Files/Excel/top50.xlsx"
// Specify the value to search in the first column
def searchValue = q

// Load the Excel file
def file = new File(filePath)
def workbook = new XSSFWorkbook(file)

// Assuming the data is in the first sheet, you can change the sheet index if needed
def sheet = workbook.getSheetAt(0)

// Find the row with the matching search value
def matchedRow = null

for (Row row : sheet) {
    def cellValue = row.getCell(0)?.toString()
    if (cellValue == searchValue) {
        matchedRow = row
        break
    }
}

//================================================================//
//Part 3. Map cells of the row to response variables. Close workbook.
//================================================================//
if (matchedRow != null) {
    for (Cell cell : matchedRow) {
        int columnIndex = cell.getColumnIndex()
        switch (columnIndex) {
            case 0:
                requestContext.cityCell = cell.toString()
                break
            case 1:
                requestContext.countryCell = cell.toString()
                break
            case 2:
               requestContext.abbrCell = cell.toString()
                break
            default:
                break
        }
}
}else {
    //Do Something 
}

// Close the workbook
workbook.close()</con:script>
    <con:responseContent>{
  "Response": "This is a dynamic response",
  "Location":"${cityCell}",
  "Country" : "${countryCell}",
  "Country Code" : "${abbrCell}"
}</con:responseContent>
  </con:response>
  <con:response name="Somerville" id="6a9087f9-b219-464b-85b2-9417d4a155ca" httpResponseStatus="202" mediaType="application/json" encoding="utf-8" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570" dataSource="">
    <con:settings/>
    <con:responseContent>{"Response": "Test","coord":{"lon":-71.0995,"lat":42.3876},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03d"}],"base":"stations","main":{"temp":298.23,"feels_like":298.62,"temp_min":294.27,"temp_max":301.75,"pressure":1016,"humidity":70},"visibility":10000,"wind":{"speed":3.6,"deg":120},"clouds":{"all":40},"dt":1687546159,"sys":{"type":2,"id":2010120,"country":"US","sunrise":1687511277,"sunset":1687566304},"timezone":-14400,"id":4951257,"name":"Somerville","cod":200}</con:responseContent>
    <con:header>
      <con:name>Server</con:name>
      <con:value>openresty</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Origin</con:name>
      <con:value>*</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Credentials</con:name>
      <con:value>true</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Methods</con:name>
      <con:value>GET, POST</con:value>
    </con:header>
    <con:header>
      <con:name>X-Cache-Key</con:name>
      <con:value>/data/2.5/weather?q=somerville</con:value>
    </con:header>
    <con:header>
      <con:name>Connection</con:name>
      <con:value>keep-alive</con:value>
    </con:header>
    <con:header>
      <con:name>Date</con:name>
      <con:value>Fri, 23 Jun 2023 18:49:56 GMT</con:value>
    </con:header>
  </con:response>
  <con:response name="Cambridge" id="1b67027d-3fe9-49ad-9c47-421923fd9ff2" httpResponseStatus="200" mediaType="application/json" encoding="utf-8" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570" dataSource="">
    <con:settings/>
    <con:responseContent>{"Response": "Cambridge","coord":{"lon":-80.3127,"lat":43.3601},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"base":"stations","main":{"temp":293.76,"feels_like":294.15,"temp_min":290.81,"temp_max":294.87,"pressure":1013,"humidity":87},"visibility":10000,"wind":{"speed":4.12,"deg":110},"clouds":{"all":100},"dt":1687545940,"sys":{"type":2,"id":2011605,"country":"CA","sunrise":1687513276,"sunset":1687568729},"timezone":-14400,"id":5913695,"name":"Cambridge","cod":200}</con:responseContent>
    <con:header>
      <con:name>Server</con:name>
      <con:value>openresty</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Origin</con:name>
      <con:value>*</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Credentials</con:name>
      <con:value>true</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Methods</con:name>
      <con:value>GET, POST</con:value>
    </con:header>
    <con:header>
      <con:name>X-Cache-Key</con:name>
      <con:value>/data/2.5/weather?q=cambridge</con:value>
    </con:header>
    <con:header>
      <con:name>Connection</con:name>
      <con:value>keep-alive</con:value>
    </con:header>
    <con:header>
      <con:name>Date</con:name>
      <con:value>Fri, 23 Jun 2023 18:50:02 GMT</con:value>
    </con:header>
  </con:response>
  <con:response name="Boston" id="5d2343a3-54fe-48aa-8ece-5f3312246f69" httpResponseStatus="400" mediaType="application/json" encoding="utf-8" compressedBodyContent="aced00057372002f636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c7565000b8b02c748eeab0200035a000a636f6d707265737365644c000b636f6d7072657373696f6e74003d4c636f6d2f657669776172652f736f617075692f696d706c2f737570706f72742f436f6d7072657373656456616c756524436f6d7072657373696f6e3b5b0004646174617400025b427870007e72003b636f6d2e657669776172652e736f617075692e696d706c2e737570706f72742e436f6d7072657373656456616c756524436f6d7072657373696f6e00000000000000001200007872000e6a6176612e6c616e672e456e756d000000000000000012000078707400044e4f4e4570" dataSource="">
    <con:settings/>
    <con:responseContent>{"Custom Message": "This is a virtual response for Boston", "coord":{"lon":-71.0598,"lat":42.3584},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03d"}],"base":"stations","main":{"temp":298.12,"feels_like":298.53,"temp_min":294.13,"temp_max":301.82,"pressure":1016,"humidity":71},"visibility":10000,"wind":{"speed":3.6,"deg":120},"clouds":{"all":40},"dt":1687546187,"sys":{"type":2,"id":2013408,"country":"US","sunrise":1687511274,"sunset":1687566289},"timezone":-14400,"id":4930956,"name":"Boston","cod":200}</con:responseContent>
    <con:header>
      <con:name>Server</con:name>
      <con:value>openresty</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Origin</con:name>
      <con:value>*</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Credentials</con:name>
      <con:value>true</con:value>
    </con:header>
    <con:header>
      <con:name>Access-Control-Allow-Methods</con:name>
      <con:value>GET, POST</con:value>
    </con:header>
    <con:header>
      <con:name>X-Cache-Key</con:name>
      <con:value>/data/2.5/weather?q=boston</con:value>
    </con:header>
    <con:header>
      <con:name>Connection</con:name>
      <con:value>keep-alive</con:value>
    </con:header>
    <con:header>
      <con:name>Date</con:name>
      <con:value>Fri, 23 Jun 2023 18:50:14 GMT</con:value>
    </con:header>
  </con:response>
</con:restMockAction>
